#!/bin/sh

# makedoc — Make documentation

# Melusina Actions (https://github.com/melusina-org/actions)
# This file is part of Melusina Actions.
#
# Copyright © 2023 Michaël Le Barbier
# All rights reserved.

# This file must be used under the terms of the MIT License.
# This source file is licensed as described in the file LICENSE, which
# you should have received as part of this distribution. The terms
# are also available at https://opensource.org/licenses/MIT

: ${TOPLEVELDIR:=$(git rev-parse --show-toplevel)}
: ${makedocstrings:=":NOT-SET"}
: ${makedocsystem:=":NOT-SET"}
: ${makedocdir:=${TOPLEVELDIR}/obj/makedoc}

case $(uname) in
    Darwin)
        sed_inplace()
        {
            sed -i '' "$@"
        }
	;;
    Linux)
        sed_inplace()
        {
            sed -i'' "$@"
        }
        ;;
    *)
	exit 70
	;;
esac

makedoc_sbcl()
{
    sbcl --noinform --disable-debugger "$@"
}

makedoc_runpatches()
{
    for patch in "${TOPLEVELDIR}"/doc/patch/*.sed; do
	include="${patch}"
	include="obj/makedoc/include/${include##*/patch/}"
	include="${include%.sed}.texinfo"
	if [ -f "${patch}" ]; then
	    sed_inplace -f "${patch}" "${include}"
	fi
    done
}

makedoc_extract()
(
    mkdir -p "${TOPLEVELDIR}/obj/makedoc"
    makedoc_sbcl \
        --eval "(unless (ql:where-is-system :${makedocsystem})
                  (pushnew #p\".\" ql:*local-project-directories*)
                  (ql:register-local-projects))"\
	--eval "(ql:quickload :${makedocsystem})"\
	--eval "(with-compilation-unit () (load \"${makedocstrings}\"))" \
	--eval "(sb-texinfo:generate-includes
 \"obj/makedoc/include/\"
 (list :${makedocsystem}) :base-package :${makedocsystem})" \
	--eval '(quit)'
)

makedoc_info()
(
    cd "${TOPLEVELDIR}/obj/makedoc"
    makeinfo "${TOPLEVELDIR}/doc/${makedocsystem}.texinfo"
)

makedoc_pdf()
(
    cd "${TOPLEVELDIR}/obj/makedoc"
    texi2pdf "${TOPLEVELDIR}/doc/${makedocsystem}.texinfo"
)

makedoc_html()
(
    cd "${TOPLEVELDIR}/obj/makedoc"
    makeinfo --html --no-split "${TOPLEVELDIR}/doc/${makedocsystem}.texinfo"
)

makedoc_main()
{
    if [ ! -f "${TOPLEVELDIR}/doc/${makedocsystem}.texinfo" ]; then
	1>&2 printf 'Info: makedoc: There is no documentation master file.\n'
    fi
    if [ ! -f "${makedocstrings}" ]; then
	1>&2 printf 'Info: makedoc: Cannot find docstrings lisp utility script.\n'
    fi
    set -e
    makedoc_extract
    makedoc_runpatches
    makedoc_info
    makedoc_html
    makedoc_pdf
}

makedoc_main "$@"

# End of file `makedoc'
